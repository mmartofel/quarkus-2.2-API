# Red Hat OpenShift deployment settings
%ocp.quarkus.kubernetes.deployment-target = openshift
%ocp.quarkus.openshift.env.configmaps=angular-demo-app-configmap
%ocp.quarkus.datasource.username = ${DBUSER}
%ocp.quarkus.datasource.password = ${DBPASSWORD}
%ocp.quarkus.datasource.jdbc.url = ${DBCONNECT}
%ocp.quarkus.swagger-ui.always-include=true
%ocp.quarkus.hibernate-orm.database.generation = validate
%ocp.quarkus.hibernate-orm.log.sql=true
%ocp.quarkus.datasource.db-kind = postgresql
%ocp.quarkus.http.cors=true
%ocp.quarkus.http.cors.headers=Access-Control-Allow-Origin,Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
%ocp.quarkus.http.cors.exposed-headers=Access-Control-Allow-Origin,Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
%ocp.quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

# General Postgress Database settings
quarkus.datasource.db-kind = postgresql
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.log.sql=true

# Angular frontend setting
quarkus.http.cors=true
quarkus.http.cors.headers=Access-Control-Allow-Origin,Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
quarkus.http.cors.exposed-headers=Access-Control-Allow-Origin,Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
